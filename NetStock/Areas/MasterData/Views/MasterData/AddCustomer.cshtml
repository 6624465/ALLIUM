@model NetStock.Contract.Customer
<style>
    .isBus {
        padding-left: 650px;
    }

    .isContact {
        padding-left: 130px;
    }
</style>
@{
    ViewBag.Title = "Customer";
    string str = "";
    //if (Request["customerCode"] != "")
    //{
    //    str = string.Format("Created By: {0} <br/> Created On: {1} <br/> Modified By: {2} <br/> Modified On: {3}", Model.CreatedBy, Model.CreatedOn, Model.ModifiedBy, Model.ModifiedBy.Length > 0 ? Model.ModifiedOn.ToString("dd/MM/yy HH:mm:ss") : "");
    //}
}

@using (Html.BeginForm("EditCustomer", "MasterData", FormMethod.Post, new { id = "frmCustomer" }))
{
    <div class="box box-solid box-default ">
        <div class="box-header with-border">
            <h3 class="box-title"></h3>
            @if (Request["customerCode"] == "")
            {
                <h3 class="box-title">Add/Edit Customer</h3>
            }
            else
            {
                <h3 class="box-title">
                    Add/Edit Customer&nbsp;&nbsp;
                    <a class="anchPopOverCss" data-container="body" data-toggle="popover" data-placement="right" data-content="@str" data-original-title="" title=""><i class="fa fa-tv" aria-hidden="true"></i></a>
                </h3>
            }
        </div>
        <div class="box-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">CustomerCode</label>
                        <div class="col-sm-3">
                            @if (Model.CustomerCode != "")
                            {
                                @Html.TextBoxFor(m => m.CustomerCode, new { @id = "txtCustomerCode", @class = "form-control input-sm alphaNumCss", @maxlength = "50", @readonly = "readonly" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.CustomerCode, new { @id = "txtCustomerCode", @class = "form-control input-sm alphaNumCss", @maxlength = "50" })
                            }
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">CustomerName</label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.CustomerName, new { @id = "txtCustomerName", @class = "form-control input-sm", @maxlength = "255" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Nick Name</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.NickName, new { @class = "form-control input-sm" })
                        </div>

                    </div>
                </div>
            </fieldset>
            <fieldset class="form-horizontal">
                @*<h3 class="box-title">Contact Information&nbsp;&nbsp;<a class="anchPopOverCss" data-container="body" data-toggle="popover" data-placement="right"  data-original-title="" title=""></a></h3>*@
                <legend> <span class="isContact">Contact Information</span><span class="isBus">Business Terms</span></legend>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Contact Person</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">GST No</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form-control input-sm" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Contact Person2</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.ContactPerson2, new { @class = "form-control input-sm" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Avg Usage</label>
                        <div>
                            <div class="col-xs-1" style="width:6.1%">
                                @Html.TextBoxFor(m => m.CustomerProducts[0].AvgUsage, new { @class = "form-control input-sm decimalCss" })

                            </div>
                            <label for="txtInvoiceNo" class="control-label input-sm" style="padding-right: 1px;float: left;">UOM</label>
                            <div class="col-md-1">
                                @Html.DropDownListFor(m => m.CustomerProducts[0].UOM, Model.UOMList, "SELECT UOM", new { @class = "input-sm form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Contact Mobile No</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.Contact, new { @class = "form-control input-sm numCss" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Selling Price</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CustomerProducts[0].CostPrice, new { @class = "form-control input-sm decimalCss" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Contact Mobile No2</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.Contact2, new { @class = "form-control input-sm numCss" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Credit Term</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CreditTerm, new { @class = "form-control input-sm" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">CustomerAddress1</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.Address1, new { @class = "form-control input-sm" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Sales Lead</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.SalesLead, new { @class = "form-control input-sm" })

                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">CustomerAddress2</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.Address2, new { @class = "form-control input-sm", @maxlength = "100" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Product Code</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.CustomerProducts[0].ProductCode, new { @class = "form-control input-sm" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">City</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.CityName, new { @class = "form-control input-sm", @maxlength = "40" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Payment Mode</label>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.PaymentMode, Model.PaymentModeList,
                           "Select Payment Mode", new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">ZIP Code</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.ZipCode, new { @class = "form-control input-sm numCss" })
                        </div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Remarks</label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.Remark, new { @class = "form-control input-sm" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Phone No.</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.TelNo, new { @class = "form-control input-sm numCss" })
                        </div>

                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Email</label>
                        <div class="col-md-3">
                            <div class="input-group">
                                <span class="input-group-addon">
                                    <i class="fa fa-envelope"></i>
                                </span>
                                @Html.TextBoxFor(m => m.CustomerAddress.Email, new { @class = "form-control input-sm" })
                            </div>
                            @Html.HiddenFor(m => m.CustomerAddress.AddressType)
                            @Html.HiddenFor(m => m.CustomerAddress.AddressId)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">State</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.InterState, new { @class = "form-control input-sm alphaNumCss", @maxlength = "40" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Country</label>
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.CustomerAddress.CountryCode, Model.CountryList, "Select Country", new { @class = "form-control  input-sm", @maxlength = "2" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label for="txtInvoiceNo" class="col-md-2 control-label input-sm">Fax</label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.CustomerAddress.FaxNo, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>

            </fieldset>
        </div>

        <div class="box-footer">
            <div class="row  no-print">
                <div class="col-xs-12">
                    @if (HtmlHelpers.hasRight("CustomerSave"))
                    {
                        <button type="button" id="btnSave21" onclick="btnSaveClick();" class="btn btn-sm btn-primary">
                            <i class="fa fa-save"></i>
                            Save
                        </button>
                    }

                    <a class="btn btn-sm btn-info" href="@Url.Action("EditCustomer", "MasterData", new { area = "MasterData", customerCode = "" }, null)">
                        <i class="fa fa-close"></i>
                        Clear
                    </a>
                    @if (HtmlHelpers.hasRight("CustomerDelete"))
                    {
                        <a href="#" id="btnDelete" onclick="DeleteCustomer('@Model.CustomerCode')" class="btn btn-sm btn-danger">
                            <i class="fa fa-times-circle"></i>
                            Delete
                        </a>
                    }

                    <a href="@Url.Action("Customers", "MasterData", new { area = "MasterData" }, null)" class="btn btn-sm btn-info pull-right">
                        <i class="fa fa-arrow-circle-o-left"></i>
                        Back
                    </a>
                </div>
            </div>
        </div>

    </div>




}

@section Scripts {
    <script type="text/javascript">
        function btnSaveClick() {
            if ($('#frmCustomer').valid()) {
                $('#frmCustomer').submit();
            }
        }
        $(document).ready(function () {

            $('#CustomerAddress_MobileNo').on('input', function (event) {
                this.value = this.value.replace(/[^0-9]/g, '');
            });
            $('[data-toggle="popover"]').popover({
                trigger: 'hover',
                html: true,
            });



            $("#txtCustomerCode").change(function () {
                debugger;
                //$('#txtCustomerName').attr("disabled", "disabled");
                var customerCode = $('#txtCustomerCode').val();
                var rooturl = "@Url.Action("CheckCustomerExist", "MasterData", new { area = "MasterData" })";
                var url = rooturl + "?CustomerCode=" + customerCode
                $.get(url, null, function (data) {
                    if(data==true)
                    {
                        alert("Customer is already Exist!");
                        $('#txtCustomerCode').val('');
                      //  $('#txtCustomerName').removeAttr("disabled");
                        return false;
                    }
                    else
                    {
                       // $('#txtCustomerName').removeAttr("disabled");
                        return true;
                    }
                })
            });

            $('#CustomerAddress_ZipCode').keypress(function () {
                if (this.value.length >= 6) // allowing you to enter only 6 chars.
                    return false;
            })
            //$('#RegistrationNo').change(function (e) {
            //    var numRegexp = /^[0-9]{1,10}$/,
            //                        num = e.currentTarget ? e.currentTarget.value : '';

            //    if (numRegexp.test(num) == false) {
            //        alert('Please enter only numbers.');
            //        $('#RegistrationNo').val("");
            //        return false;
            //    }
            //});

            //$('#CustomerAddress_ZipCode').change(function (e) {
            //    var numRegexp = /^[0-9]{1,10}$/,
            //                        num = e.currentTarget ? e.currentTarget.value : '';

            //    if (numRegexp.test(num) == false) {
            //        alert('Please enter only numbers.');
            //        $('#CustomerAddress_ZipCode').val("");
            //        return false;
            //    }
            //});


            $('#CustomerProducts[0]_AvgUsage').change(function (e) {
                var decimalRegexp = /^\d*(?:\.\d{1,2})?$/,
                                    num = e.currentTarget ? e.currentTarget.value : '';
                if (decimalRegexp.test(num) == false) {
                    alert('Please enter only decimal numbers.');
                    $('#CustomerProducts[0]_AvgUsage').val("");
                    return false;
                }
            });

            $('#CustomerAddress_MobileNo').keypress(function () {
                if (this.value.length >= 20) // allowing you to enter only 20 chars.
                    return false;
            })

            $('#CustomerAddress_Email').change(function (e) {
                var emailRegexp = /^[+a-zA-Z0-9._-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/i,
                                    email = e.currentTarget ? e.currentTarget.value : '';

                if (emailRegexp.test(email) == false) {
                    alert('Please enter valid email.');
                    $('#CustomerAddress_Email').val("");
                    return false;
                }
            });
            $("#txtCustomerCode").focus();


            @*if ('@Model.Status' == 'False') {
            $("#txtCustomerName").addClass("StrikeOut")
            $("#btnSave").attr("disabled", " disabled")
            $("#btnDelete").attr("disabled", " disabled")

        }*@
            @if (Model.CustomerCode != "")
              {
                  <text>$('#CustomerProducts_0__UOM').val('@Model.CustomerProducts[0].UOM');</text>
              }

            $('#frmCustomer').validate({
                rules: {
                    CustomerCode: {
                        required: true
                    },
                    CustomerName: {
                        required: true
                    },
                    NickName: {
                        required: true
                    },
                    CustomerName: {
                        required: true
                    }
                    //ContactPerson: {
                    //    required: true
                    //},
                    //ContactPerson2: {
                    //    required: true
                    //},
                    //RegistrationNo: {
                    //    required: true
                    //},
                    //PaymentMode: {
                    //    required: true
                    //},
                    //'CustomerAddress.Contact': {
                    //    required: true
                    //},
                    //'CustomerAddress.Contact2': {
                    //    required: true
                    //},
                    //'CustomerProducts[0].AvgUsage': {
                    //    required: true
                    //},
                    //'CustomerAddress.Address1': {
                    //    required: true
                    //},
                    //'CustomerProducts[0].CostPrice': {
                    //    required: true
                    //},
                    //'CustomerAddress.Address2': {
                    //    required: true
                    //},
                    //CreditTerm: {
                    //    required: true
                    //},
                    //'CustomerAddress.CityName': {
                    //    required: true
                    //},
                    //SalesLead: {
                    //    required: true
                    //},
                    //'CustomerAddress.ZipCode': {
                    //    required: true
                    //},
                    //'CustomerProducts[0].ProductCode': {
                    //    required: true
                    //},
                    //'CustomerAddress.TelNo': {
                    //    required: true
                    //},
                    //'CustomerAddress.Email': {
                    //    required: true
                    //},
                    //InterState: {
                    //    required: true
                    //},
                    //'CustomerAddress.CountryCode': {
                    //    required: true
                    //},
                    //'CustomerAddress.FaxNo': {
                    //    required: true
                    //}
                }
            });
        });

        function DeleteCustomer() {

            var customerCode = $("#txtCustomerCode").val();
            var customerName = $("#txtCustomerName").val();

            if (customerCode == "NEW") {
                ModalShowConfirm("Please choose a valid Customer to Proceed!");
                return false;
            }


            if (!confirm("Do you want to delete Selected Customer -  [" + customerCode + "] ?")) {
                return false;
            }

            var url = '@Url.Content("~/MasterData/DeleteCustomer?customerCode=")' + customerCode;
            location.href = url;
        }



    </script>
}